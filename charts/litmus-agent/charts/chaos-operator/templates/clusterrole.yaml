{{- if and .Values.serviceAccount.create ( eq .Values.global.AGENT_MODE "cluster") -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "chaos-operator.serviceAccountName" . }}
  labels:
    {{- include "chaos-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
rules:
  - apiGroups: [""]
    resources: ["replicationcontrollers", "secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["apps.openshift.io"]
    resources: ["deploymentconfigs"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "deletecollection"]
  - apiGroups: ["argoproj.io"]
    resources: ["rollouts"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods", "configmaps", "events", "services"]
    verbs:
      [
        "get",
        "create",
        "update",
        "patch",
        "delete",
        "list",
        "watch",
        "deletecollection",
      ]
  - apiGroups: ["litmuschaos.io"]
    resources: ["chaosengines", "chaosexperiments", "chaosresults"]
    verbs:
      [
        "get",
        "create",
        "update",
        "patch",
        "delete",
        "list",
        "watch",
        "deletecollection",
      ]
  # for validation of existance of chaosresult crd
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "get"]
  - apiGroups: [ "litmuschaos.io" ]
    resources: [ "chaosengines/finalizers" ]
    verbs: [ "update" ]
{{- end }}
