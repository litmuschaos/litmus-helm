{{ if not (has "pod-network-corruption" .Values.experiments.disabled) }}
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Inject network packet corruption into application pod
kind: ChaosExperiment
metadata:
  name: pod-network-corruption
  labels:
    instance: {{ .Release.Name }}
    chart: {{ include "kubernetes-chaos.chart" . }}
    litmuschaos.io/version: {{ .Chart.AppVersion }}
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "pods/log"
          - "events"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "delete"
          - "list"
          - "patch"
          - "update"
          - "get"
          - "deletecollection"
    image: "{{ .Values.image.litmusGO.repository }}:{{ .Values.image.litmusGO.tag }}"
    imagePullPolicy: {{ .Values.image.litmusGO.pullPolicy }}
    args:
    - -c
    - ./experiments/pod-network-corruption
    command:
    - /bin/bash
    env:

    - name: TARGET_CONTAINER
      value: ''

    # provide lib image
    - name: LIB_IMAGE
      value: "{{ .Values.image.litmusLIBImage.repository }}:{{ .Values.image.litmusLIBImage.tag }}"

    - name: NETWORK_INTERFACE
      value: 'eth0'

    - name: TC_IMAGE
      value: "{{ .Values.image.networkChaos.tcImage }}"

    - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
      value: '100' #in PERCENTAGE

    - name: TOTAL_CHAOS_DURATION
      value: '60' # in seconds

    # Time period to wait before injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    - name: LIB
      value: 'litmus'

    # percentage of total pods to target
    - name: PODS_AFFECTED_PERC
      value: ''

    - name: TARGET_POD
      value: ''

    # provide the name of container runtime
    # it supports docker, containerd, crio
    # defaults to docker
    - name: CONTAINER_RUNTIME
      value: "{{ .Values.environment.runtime }}"

    # provide the container runtime socket path
    # needed only for containerd and crio runtime
    # default set to std containerd sock file path
    - name: SOCKET_PATH
      value: "{{ .Values.environment.socketPath }}" 

    labels:
      name: pod-network-corruption
{{ end }}
