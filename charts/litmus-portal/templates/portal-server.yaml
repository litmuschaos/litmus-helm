apiVersion: apps/v1
kind: Deployment
metadata:
  name: litmusportal-server
  namespace: {{ .Release.Namespace }}
  labels:
    component: litmusportal-server
spec:
  replicas: {{ .Values.portalServer.deployment.replicas }}
  selector:
    matchLabels:
      component: litmusportal-server
  template:
    metadata:
      labels:
        component: litmusportal-server
    spec:
      containers:
        - name: graphql-server
          image: {{ .Values.portalServer.deployment.graphqlServer.image }}
          resources:
            {{- toYaml .Values.portalServer.deployment.graphqlServer.resources | nindent 12 }}
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: LITMUS_PORTAL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PORTAL_SCOPE
              value: {{ .Values.portalScope }}
            - name: SELF_CLUSTER
              value: "true"
            - name: AGENT_SCOPE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentScope
            - name: AGENT_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentNamespace
            - name: LITMUS_PORTAL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_PASSWORD
            - name: SUBSCRIBER_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.subscriberImage }}
            - name: ARGO_SERVER_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.argoServerImage }}
            - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.argoWorkflowControllerImage }}
            - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.argoWorkflowExecutorImage }}
            - name: LITMUS_CHAOS_OPERATOR_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.litmusOperatorImage }}
            - name: LITMUS_CHAOS_RUNNER_IMAGE
              value: {{ .Values.portalServer.deployment.graphqlServer.env.litmusRunnerImage }}
          ports:
            - containerPort: {{ .Values.portalServer.deployment.graphqlServer.port }}
          imagePullPolicy: {{ .Values.portalServer.deployment.graphqlServer.imagePullPolicy }}
        - name: auth-server
          image: {{ .Values.portalServer.deployment.authServer.image }}
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_PASSWORD
            - name: ADMIN_USERNAME
              value: {{ .Values.portalServer.deployment.authServer.env.adminUsername }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.portalServer.deployment.authServer.env.adminPassword }}
          ports:
            - containerPort: {{ .Values.portalServer.deployment.authServer.port }}
          imagePullPolicy: {{ .Values.portalServer.deployment.authServer.imagePullPolicy }}
      serviceAccountName: {{ .Values.portalServer.deployment.serviceAccountName }}