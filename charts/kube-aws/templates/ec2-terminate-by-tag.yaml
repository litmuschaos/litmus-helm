{{ if not (has "ec2-terminate-by-tag" .Values.experiments.disabled) }}
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Stopping an aws EC2 instance for certain interval using common tags on the instance \n"
kind: ChaosExperiment
metadata:
  name: ec2-terminate-by-tag
  labels:
    {{- include "kube-aws.labels" . | indent 4 }}
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "events"
          - "pods/log"
          - "pods/exec"
          - "secrets"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
    image: "{{ .Values.image.litmusGO.repository }}:{{ .Values.image.litmusGO.tag }}"
    imagePullPolicy: {{ .Values.image.litmusGO.pullPolicy }}
    args:
    - -c
    - ./experiments -name ec2-terminate-by-tag
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    - name: INSTANCE_TAG
      value: ''

    # enable it if the target instance is a part of self-managed nodegroup.
    - name: MANAGED_NODEGROUP
      value: 'disable'

    - name: REGION
      value: ''

    # Target the percentage of instance filtered from tag
    - name: INSTANCE_AFFECTED_PERC
      value: ''

    - name: SEQUENCE
      value: 'parallel'      

    # Provide the path of aws credentials mounted from secret  
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus' 
    labels:
      name: ec2-terminate-by-tag
      app.kubernetes.io/part-of: litmus
    secrets:
    - name: cloud-secret
      mountPath: /tmp/      
{{ end }}
