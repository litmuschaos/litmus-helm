version: 2.1
jobs:
  lint-charts:
    docker:
      - image: quay.io/helmpack/chart-testing
    steps:
      - checkout
      - run:
          name: lint
          command: |
            helm version --client
            git remote add litmus https://github.com/litmuschaos/litmus-helm.git
            git fetch litmus master
            ct lint --config .circleci/ct.yaml --lint-conf .circleci/lintconf.yaml
  check-docs-update:
    docker:
      - image: jnorwood/helm-docs:latest
    steps:
      - checkout
      - run:
          name: check-docs-update
          command: |
            apk add git
            helm-docs
            if [ -z "$(git status --porcelain)" ]; then
              echo "Docs are up-to-date"
            else
              echo "Docs are stale. Needs to be updated. Use helm-docs"
              exit 1
            fi
  build:
    docker:
      #- image: ubuntu
      - image: alpine
    steps:
      - checkout
      - run:
          name: helm-github-pages
          environment:
            - GITHUB_PAGES_REPO: litmuschaos/litmus-helm
          command: |
            apk update
            apk add bash openssl
            wget -O - https://raw.githubusercontent.com/litmuschaos/helm-github-pages/master/publish.sh | bash
  deploy:
    machine: true
    parameters:
      chart:
        type: string
      kubernetes_version:
        type: string
    steps:
      - checkout
      - run:
          name: Install kind
          command: |
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
            chmod +x ./kind
            sudo mv kind /usr/local/bin/
      - run:
          name: Install helm
          command: |
            curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Create cluster
          command: |
            kind create cluster --image=kindest/node:v<< parameters.kubernetes_version >>
      - run:
          name: Test chart installation
          command: |
            helm upgrade --install "<< parameters.chart >>" ./charts/<< parameters.chart >> -n chaos --wait --create-namespace=true
            if [ "<< parameters.chart >>" != "kubernetes-chaos" ] && [ "<< parameters.chart >>" != "kube-aws" ]; then kubectl wait --for=condition=Ready pod --all -n chaos --timeout=300s; fi
workflows:
  version: 2.1
  lint:
    jobs:
      - lint-charts:
          filters:
            ## lint job (and build below) needs to be run on all branches except for gh-pages
            ## it is taken are of in lint via an "ignore" directive
            branches:
              ignore: gh-pages
  check-docs-update:
    jobs:
      - check-docs-update:
          filters:
            ## lint job (and build below) needs to be run on all branches except for gh-pages
            ## it is taken are of in lint via an "ignore" directive
            branches:
              ignore: gh-pages
  build:
    jobs:
      - build:
          filters:
            ## release jobs needs to be run for tagged releases alone & not for any branch commits
            branches:
              only: master
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              ignore: gh-pages
          matrix:
            parameters:
              kubernetes_version: [1.16.15, 1.17.17, 1.18.19, 1.19.11, 1.20.7, 1.21.1]
              chart: [litmus-2-0-0-beta, litmus, kubernetes-chaos, kube-aws]
